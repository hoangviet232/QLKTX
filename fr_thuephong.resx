<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAI0AAACNAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKT2/wADBAUbCAwRTwgNEUUEAwRJKCQlxhsZ
        GZ4AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAADQ4WHTMdLz2BNFVvuVCDq+9Nf6XmJ0BS1UxK
        Tf5HQkPWBQUFNgAAAAAAAAAAAAAAAA4WHQAMExkRFiUwXDBQabY6YH3kPWWD+06Apv9Zk7//Z6rd/2Wn
        2f5JWmr5WFBR+BgWF3AAAAAAAAAAAAAAAAAMExoACg8URjthfu5alMH9O2F/8Dxjgf1Qhaz/UISr/12Y
        xv90wPj/QmJ9+VtUVf4wLC3JAAAAAAAAAAAAAAAADhggAA0XHiIeMkGIHS89hg4WHUsgNESINFdwsEd0
        l9VQg6vwS3uh5yQ4SLclIiO6GhgYlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcVFQASERE9FxQUawMB
        ACAGCg4sChEXRwcMED8BAQIWAgAAGgAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7ODgAHRsblkE9
        Pt8ODAw0EA4OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQz8/AB8d
        HZtKRUbjDw0NNxEPDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFAAAB
        ABUZFxi0Mi8w6g0MDFgAAAAABAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsL
        CwAICAhPLyws8UA7PPwiHyC7AAAADwkHBwAAAAAAAAAAAAAAAAAAAAAAAAAABgAAAAkAAAAEAAAADAEB
        ASQAAAALBAQEXhsZGv4vLC3/IR4f0gAAABQIBgYAAAAAAAAAAAAAAAAAAAAAACYYBqJFKwuoFA0GiTNC
        TpFZc4fKNENOqQICApIKCQmiGBYXpwgICaERFhpnBwkKDQcJCwAAAAAAAAAAAAAAAABaOA31sG4Z/kRB
        OPGGrcr3pdT4/4y00/5SaXvsTmV23is4QrceJi3PMD5I8gwQE0oOEhUAAAAAAAAAAAAAAAAAYj0O8r51
        Gf1mbWz3rN3//6PR9P98oLv/cZGp/2mGnf8wPUf+JjE5/iYxOrcKDQ8gDBASAAAAAAAAAAAAAAAAAGI9
        DvK/dxr9UlJM9ISqx/mfzO//kbra/4uy0P99obz/TmR1/iErMbYAAAAkDRASAAAAAAAAAAAAAAAAAAAA
        AAAyIAfpXTsO9B0TCLopNT6BTGFy31NrffJUbH7yU2t97T1OXKcICgwqHygvAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/4AAAPgAAADwAAAA8AAAAPAAAAD+AAAA/j8AAP4/AAD8HwAA/B8AAAAfAAAADwAAAA8AAAAP
        AAAAHwAAAD8AAA==
</value>
  </data>
</root>