<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAALEAAACxAAAAAAAAAAAA
        AAAcKTYACg8UOyk8T8UpPVDRKT1R0Sk8T8UKDxQ7AAAAAx4zKVs2Xk25K0w+lAYMCygAAAAyAAAAWQAA
        AHsAAABdLUNYAA8XH01GaIrxT3Wb/k91m/5FZ4nyDhUcVAYKCykfNzTVTYVv+0FfR/YhIRKNAAAAOwAA
        AF0AAACBAAAAYh4xMgAKERFML01P6zlZXvZIUlr1UFVZ9jk2M78QFhhqP3qP5kVpaPqhj0f9XVIorwAA
        AEAAAABcAAAAgQAAAGICAAAUGi4lkDljUPIzUEb3TU9R93pyav1waWL2EREQXSdOXZYyRkPibmAu1DIs
        Fl4AAAA/AAAAYgAAAIAAAABaIjswf1WUefVVlHj+PFVS9ktUX/hBOy7+XlhR9hEUEngJEQ5ZBgkHagsJ
        BCkAAAAmAAAAbwAAAHsAAAB7AAAAMjtmU8tepIb/T4lv/0d3Yv1WVE/7fXNr/WlhXPc7Y1HsVZN49UV3
        YtUcMShlAAAAJwAAAHMAAAB5AAAAeQAAACs8Z1TObb6b/2Oujfxgpof8RV1P8lx3Z/RJZFX1PmlW6EBw
        W7xTkHXrT4pw7RsxJ3sAAABXAAAATwAAAGoAAAAoJkE1h0yGbfUuVET2K0s+9zZhTvhgqIj9QHBb0Rov
        Jl0AAAATGzAmZT9sWOE5UE7pGx8kZwAAAAEAAAAEAAAAAQULCBcPHhZ6Ljw/4EdVYPMVIR28GzAnjBEZ
        GWsPFRhPBAYHRw4TFVMMERGsRE9b+iMpMLoCBARLERgaTRMZHD4TFBgAAAAAFU5aaMVmdoj8JywzuQwM
        D1s+V1+4VnmE7BEXGrFQb3rwKzxBwCg4PcRMa3XzERcasFR2ges9Vl3KBwcGEBUTD4FGT1rxk6rE/1pp
        ef8sMzvDOlJZxVh8h+cWHyKXcJ2o9kNeZa1DXmWtcJ2o9hokKJl3p7btUXJ81BUTElw5MzDpXmp396W/
        3f+VrMf/T1xq2AgMDVoRGBtEERcaZmaOm/k8VFuxQVtjr26aqPYZIyebdaSz7lBxetMyLSqyWVBK/Vpk
        b/erxuT/nbXS/1VictcAAAAhEBYYAAwSEzcsPkOnFh4hfkNeZqxumqf2GSMnm3Wks+5QcXrTLSkms2Rb
        VP1YVlb5ZXKC+lVfa/gxNDnOAgEAGhISEwAAAAADAAAACQAAABAxREqhTm547RghJJl2pbTuUXF70wwL
        Cz06NTHQZVtV/1RNSf5GPzr/QTs25A0LCjcmIh8AAAAAAAAAAAAAAAADCg0POA8VF04WHyJmb5up8U1s
        dtQAAAABEhEPSzMuK7w6NTLSOTMw0SYiH5YDAwEUExEOAAAAAAAAAAAAAAAAAAAAAAAqPEEAERcZPDtT
        WsUtP0WkgAAAAIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAQAAAAEA
        AAABwAAAAfgAAA==
</value>
  </data>
</root>